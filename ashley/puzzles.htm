<!DOCTYPE html>
<html>
    <head>
        <title>Welcome!</title>
    </head>
    <body>
        <script src="../scripts/query_strings.js"></script>
        <script src="../scripts/scrambled_eggs.js"></script>
        <script src="../scripts/hash_browns.js"></script>
        <script src="../scripts/html_tools.js"></script>
        <script>
            const queryStrings = getQueryStrings(['puzzleId', 'r']);
            const puzzleId = queryStrings['puzzleId'];

            const quizGrader = [];

            //TOOD: also check the date and only make the quiz available on/after a certain date?

            if (puzzleId) {
                const rotations = parseInt(queryStrings['r']);
                const title = unscramble(puzzleId + '_title', rotations);
                document.title = title;

                const objStr = unscramble(puzzleId + '_quiz', rotations);
                const obj = JSON.parse(objStr);
                const quiz = obj['quiz'];
                
                const quizDisplay = createElement('div', {'style': 'width:800px;height:100%;margin:0px auto;display:flex;flex-wrap:wrap;flex-direction:column;'}, null);
                document.body.appendChild(quizDisplay);

                quizDisplay.appendChild(createElement('h1', {}, 'Quiz'));

                for (let question of quiz) {
                    const q = makeQuizQuestion(question);
                    quizDisplay.appendChild(q);
                }

                const submitButton = createElement('input', {'type': 'button', 'value': 'Submit', 'style': 'heigh:3em;font-size:2em;'}, null);
                submitButton.addEventListener('click', () => {gradeQuiz();}, false);
                quizDisplay.appendChild(submitButton);
            }
            else {
                //TODO: something something unknown puzzle id
            }

            function gradeQuiz() {
                let answers = '';
                for (let i = 0; i < quizGrader.length; i++) {
                    answers += quizGrader[i]['qId'] + ':' + quizGrader[i]['answer'];
                    const options = document.getElementsByName(quizGrader[i]['qId']);
                    const selected = Array.from(options).find((r) => r.checked);
                    if (!selected || selected.value !== quizGrader[i]['answer']) {
                        return failedQuiz();
                    }
                }
                //TODO: write answers to localStorage using a puzzleId-based key that can be verified before loading the next puzzle
                const url = window.location.origin + '/showcase/ashley/';
                window.location.href = url + 'crypto_puzzle.htm' + window.location.search;
            }

            function failedQuiz() {
                //TODO: something in the UI instead of an alert
                alert('Sorry, you have failed the quiz. Please try again.');
            }

            function makeQuizQuestion(questionObj) {
                //{'question': `text?`, 'options': {'a': 'thing1', 'b': 'thing2', 'c': 'thing3', 'd': 'thing4'}, 'answer': 'c'},
                const qNum = quizGrader.length + 1;
                const qId = `question_${qNum.toString()}`;
                const container = makeFieldset('Question ' + qNum.toString());
                const qText = createElement('h2', {}, questionObj['question']);
                container.appendChild(qText);
                //TODO: better formatting?
                const options = questionObj['options'];
                for (let option in options) {
                    const text = options[option];
                    const optId = qId + '_' + option;
                    const radio = createElement('input', {'type': 'radio', 'id': optId, 'name': qId, 'value': option}, null);
                    const label = createElement('label', {'for': optId}, text);
                    const br = createElement('br', {}, null);
                    container.appendChild(radio);
                    container.appendChild(label);
                    container.appendChild(br);
                }
                quizGrader.push({'qId': qId, 'answer': questionObj['answer']});
                return container;
            }
            
        </script>
    </body>
</html>